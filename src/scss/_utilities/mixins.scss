// Mixins

///*
//** General Custom Mixins
//*/

///* Animations and keyframes
//-------------------------------------*/

@mixin animation-simple($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

///* Retina mixin by Jason Zimdars
//-------------------------------------*/
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

///* Absolute and Fixed Positioned
//-------------------------------------*/
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  @if $top != auto { top: $top; }
  @if $right != auto { right: $right; }
  @if $bottom != auto { bottom: $bottom; }
  @if $left != auto { left: $left; }
  position: absolute;
}
@mixin fix-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  @if $top != auto { top: $top; }
  @if $right != auto { right: $right; }
  @if $bottom != auto { bottom: $bottom; }
  @if $left != auto { left: $left; }
  position: fixed;
}

///* Transform
//-------------------------------------*/
@mixin transform($transform...) {
  -webkit-transform: $transform;
  -ms-transform: $transform; // IE9 only
  -o-transform: $transform;
  transform: $transform;
}
@mixin transition($data) {
  -webkit-transition: $data;
  -moz-transition: $data;
  -o-transition: $data;
  transition: $data;
}
@mixin backface-visibility($visibility...) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility:    $visibility;
  -ms-backface-visibility:     $visibility;
  backface-visibility: $visibility;
}


///* Responsive Breakpoints
//-------------------------------------*/
@mixin breakpoint($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {
    @if $min == visible-xs { //  SCREEN < 767px
      @media (max-width: 767px) { @content; }
    }
    @else if $min == visible-sm { // 768px < SCREEN > 991px
      @media (min-width: 768px) and (max-width: 991px) { @content; }
    }
    @else if $min == visible-md { // 992px < SCREEN > 1199px
      @media (min-width: 992px) and (max-width: 1199px)  { @content; }
    }
    @else if $min == visible-lg { //  SCREEN > 1200px
      @media (min-width: 1200px)  { @content; }
    }
      // additional rules
    @else if $min == visible-from-xs { //  SCREEN > 767px
      @media (min-width: 767px)  { @content; }
    }
    @else if $min == visible-from-sm { //  SCREEN > 768px
      @media (min-width: 768px)  { @content; }
    }
    @else if $min == visible-from-md { //  SCREEN > 991px
      @media (min-width: 991px)  { @content; }
    }
    @else if $min == visible-till-md { //  SCREEN < 991px
      @media (max-width: 991px)  { @content; }
    }
  }

    // if number
  @else if $type == number {
    $query: "all" !default;
    @if $min != 0 and $max != 0 {
      $query: "(min-width: #{$min}) and (max-width: #{$max})";
    }
    @else if $min != 0 and $max == 0 {
      $query: "(min-width: #{$min})";
    }
    @else if $min == 0 and $max != 0 {
      $query: "(max-width: #{$max})";
    }
    @media #{$query} {
      @content;
    }
  }

}


///* Margin mixin
//-------------------------------------*/
@mixin marg-topNbottom ($arg){
  margin-top: $arg;
  margin-bottom: $arg;
}
@mixin marg-leftNright ($arg){
  margin-left: $arg;
  margin-right: $arg;
}

///* Padding mixin
//-------------------------------------*/
@mixin padd-topNbottom ($arg){
  padding-top: $arg;
  padding-bottom: $arg;
}
@mixin padd-leftNright ($arg){
  padding-left: $arg;
  padding-right: $arg;
}

///* Border mixin
//-------------------------------------*/
@mixin border-topNbottom ($arg...){
  border-top: $arg;
  border-bottom: $arg;
}
@mixin border-leftNright ($arg){
  border-left: $arg;
  border-right: $arg;
}


///* Image sprite function
//-------------------------------------*/
@mixin img-sprite($url){
  background: url(#{$url}) no-repeat 0 0;
  @extend %imgsprite;
}

///* Style releted referrer points
//-------------------------------------*/
%reset {
  margin: 0;
  padding: 0;
}
%imgsprite {
  display: inline-block;
  overflow: hidden;
  text-indent: -999em;
}

/*Vertical align center*/
@mixin vertical-center(){
  @include abs-pos(50%,auto,auto,auto);
  @include transform(translateY(-50%));
}

/*Horizontal align center*/
@mixin horizontal-center(){
  @include abs-pos(auto,auto,auto, 50%);
  @include transform(translateX(-50%));
}

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus {
      background-color: $background;
      border-color: $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin border-radius($arg) {
  border-radius: $arg;
  -webkit-border-radius: $arg;
  -moz-border-radius: $arg;
}

@mixin square($arg) {
  width: $arg;
  height: $arg;
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin appearance($appearance) {
  -webkit-appearance: $appearance;
  -moz-appearance: $appearance;
}

@mixin reset() {
  border: 0;
  @include border-radius(0);
  padding: 0;
  margin: 0;
  box-shadow: none;
  text-decoration: none;
  background-color: transparent;
}
